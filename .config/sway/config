# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# lockscreen
set $lock ~/.local/bin/scripts/lock.sh
# snipping tool
set $snippingtool 'grim -g "$(slurp)" - | swappy -f -'
set $notepad "alacritty -t 263ebf09-23ec-411c-981e-9e7728edb35a -e vim -p ~/notes/*"

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu dmenu_path | wofi --allow-images --show drun -i | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output * bg /home/phil/.config/sway/mars-desert-satellite-8k-sj-3840x2160.jpg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

output eDP-1 scale 2
output eDP-1 pos 1920 0 res 3840x2160
output DP-1 pos 0 0 res 1920x1080
input type:tablet_tool map_to_output DP-1
input type:touch map_to_output DP-1
### Idle configuration
# Idle configuration
exec swayidle \
         timeout 600 'exec $lock' \
         timeout 1200 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         timeout 1800 'systemctl suspend-then-hibernate' \
         before-sleep 'exec $lock'

# store clipboard to clipman
exec wl-paste -t text --watch clipman store --no-persist


#
# Example configuration:
#
# exec swayidle -w \
#          timeout 30 'swaylock -f -c 000000' \
#          timeout 60 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input type:keyboard {
    xkb_layout "de"
    xkb_variant "nodeadkeys"
    #xkb_variant "colemak,,typewriter"
    #xkb_options "grp:win_space_toggle"
}

input "2:10:TPPS/2_Elan_TrackPoint" {
    # accel_profile "flat"
    pointer_accel -0.3
    dwt enabled
    # natural_scroll enabled
    middle_emulation enabled
}

input "2:7:SynPS/2_Synaptics_TouchPad" {
    # accel_profile "flat"
    pointer_accel 0
    dwt enabled
    # natural_scroll enabled
    # middle_emulation enabled
}
input type:tablet_tool map_to_output DP-1
input type:touch map_to_output DP-1


### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

    # lock screen
    bindsym $mod+delete exec $lock
    
    # clipman
    bindsym $mod+Insert exec clipman pick -t wofi
    
    # clipman
    bindsym $mod+i exec wofi-emoji

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#

# workspaces
set $ws1   1:
set $ws2   2:
set $ws3   3:3
set $ws4   4:4
set $ws5   5:5
set $ws6   6:6
set $ws7   7:7
set $ws8   8:8
set $ws9   9:9
set $ws0   10:10
set $wsF1  11:
set $wsF2  12:
# set $wsF2  12:
set $wsF3  13:13
set $wsF4  14:14
set $wsF5  15:15
set $wsF6  16:16
set $wsF7  17:17
set $wsF8  18:18
set $wsF9  19:19
set $wsF10 20:20
set $wsF11 21:
set $wsF12 22:

# Default workspaces for common programs
#assign [class="^Google-chrome$"] workspace $ws1
# assign [class="^code-oss$"] $ws2
# assign [class="^Signal$"] workspace $wsF1
# assign [class="^Riot$"] $wsF1
# assign [class="^Mailspring$"] $wsF2
# assign [app_id="virt-manager"] $wsF8
# assign [class="^KeePass2$"] $wsF11
#assign [class="^Spotify$"] $wsF12
assign [app_id="^Signal$"] workspace $wsF1
assign [app_id="Signal"] workspace $wsF1
# assign [class="Google-chrome"] workspace $ws1
assign [class="Spotify"] workspace $wsF12
assign [class="^Spotify$"] $wsF12

for_window [title="nm_tui_win"] floating enable
for_window [title="263ebf09-23ec-411c-981e-9e7728edb35a"] floating enable
for_window [title="Spotify Premium"] move to workspace $wsF12
for_window [shell="^((?!xdg_shell).)*$"] title_format "%title :: %shell"
for_window [app_id="discord"] move to workspace $wsF2

# switch to workspace
bindsym $mod+1   workspace $ws1
bindsym $mod+2   workspace $ws2
bindsym $mod+3   workspace $ws3
bindsym $mod+4   workspace $ws4
bindsym $mod+5   workspace $ws5
bindsym $mod+6   workspace $ws6
bindsym $mod+7   workspace $ws7
bindsym $mod+8   workspace $ws8
bindsym $mod+9   workspace $ws9
bindsym $mod+0   workspace $ws0
bindsym $mod+F1  workspace $wsF1
bindsym $mod+F2  workspace $wsF2
bindsym $mod+F3  workspace $wsF3
bindsym $mod+F4  workspace $wsF4
bindsym $mod+F5  workspace $wsF5
bindsym $mod+F6  workspace $wsF6
bindsym $mod+F7  workspace $wsF7
bindsym $mod+F8  workspace $wsF8
bindsym $mod+F9  workspace $wsF9
bindsym $mod+F10 workspace $wsF10
bindsym $mod+F11 workspace $wsF11
bindsym $mod+F12 workspace $wsF12
# exec "(pidof spotify 1>/dev/null &&)||spotify &&"
# showkey keyid +8
bindcode 452 exec $notepad
bindcode 642 exec $snippingtool

# move focused container to workspace
bindsym $mod+Shift+1    move container to workspace $ws1
bindsym $mod+Shift+2    move container to workspace $ws2
bindsym $mod+Shift+3    move container to workspace $ws3
bindsym $mod+Shift+4    move container to workspace $ws4
bindsym $mod+Shift+5    move container to workspace $ws5
bindsym $mod+Shift+6    move container to workspace $ws6
bindsym $mod+Shift+7    move container to workspace $ws7
bindsym $mod+Shift+8    move container to workspace $ws8
bindsym $mod+Shift+9    move container to workspace $ws9
bindsym $mod+Shift+0    move container to workspace $ws0
bindsym $mod+Shift+F1   move container to workspace $wsF1
bindsym $mod+Shift+F2   move container to workspace $wsF2
bindsym $mod+Shift+F3   move container to workspace $wsF3
bindsym $mod+Shift+F4   move container to workspace $wsF4
bindsym $mod+Shift+F5   move container to workspace $wsF5
bindsym $mod+Shift+F6   move container to workspace $wsF6
bindsym $mod+Shift+F7   move container to workspace $wsF7
bindsym $mod+Shift+F8   move container to workspace $wsF8
bindsym $mod+Shift+F9   move container to workspace $wsF9
bindsym $mod+Shift+F10  move container to workspace $wsF10
bindsym $mod+Shift+F11  move container to workspace $wsF11
bindsym $mod+Shift+F12  move container to workspace $wsF12
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

# special key bindings

    bindsym XF86AudioRaiseVolume exec "[[ $(pamixer --get-volume) -lt 150 ]] && pactl set-sink-volume @DEFAULT_SINK@ +5%; pactl set-sink-mute @DEFAULT_SINK@ 0"
    bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5%
    bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
    # bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle && pactl set-source-mute 2 toggle 
    # bindsym XF86AudioMicMute exec for i in $(pactl list short sources| cut -d $'\t' -f1); do pactl set-source-mute $i toggle; done
    bindsym XF86AudioMicMute exec ~/.config/sway/muteallsources.sh
    bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym XF86MonBrightnessUp exec brightnessctl set +5%
    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous
    bindsym XF86Search exec bemenu-run


#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Colors
#
set $cl_high #009ddc
set $cl_indi #d9d8d8
set $cl_back #231f20
set $cl_fore #d9d8d8
set $cl_urge #ee2e24

# Colors                border   bg       text     indi     childborder
client.focused          $cl_high $cl_high $cl_fore $cl_indi $cl_high
client.focused_inactive $cl_back $cl_back $cl_fore $cl_back $cl_back
client.unfocused        $cl_back $cl_back $cl_fore $cl_back $cl_back
client.urgent           $cl_urge $cl_urge $cl_fore $cl_urge $cl_urge
# Window borders
default_border pixel 1
default_floating_border normal
hide_edge_borders smart

smart_gaps on
gaps inner 10

# Font
font pango:Sans 12
# font pango:SourceCodePro Medium 11

# Status Bar
bar {
    swaybar_command waybar
}

# autostart

# screen sharing in chrome
# https://github.com/emersion/xdg-desktop-portal-wlr#running
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway

# exec dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK DBUS_SESSION_BUS_ADDRESS XDG_CURRENT_DESKTOP=sway XDG_SESSION_TYPE=wayland
# exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK DBUS_SESSION_BUS_ADDRESS

exec --no-startup-id redshift -c ~/.config/redshift/config
# workspace $wsF12
# exec spotify
workspace $wsF1
# exec signal-desktop --use-tray-icon --enable-features=UseOzonePlatform --ozone-platform=wayland
exec gtk-launch signal-desktop
workspace $ws2
exec $term -e tmux
workspace $ws1

# exec google-chrome-beta --enable-features=UseOzonePlatform --ozone-platform=wayland
# exec google-chrome-stable --enable-features=UseOzonePlatform --ozone-platform=wayland --ignore-gpu-blocklist --enable-accelerated-video-decode --enable-gpu-rasterization --enable-oop-rasterization --enable-zero-copy --use-gl=egl --enable-features=VaapiVideoDecoder
# exec google-chrome-stable --enable-features=UseOzonePlatform --ozone-platform=wayland
exec gtk-launch google-chrome-beta

workspace $ws1 output eDP-1
workspace $ws2 output eDP-1

include /etc/sway/config.d/*
